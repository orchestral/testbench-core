name: tests

on:
  push:
  pull_request:
  schedule:
    - cron: '0 0 * * *'

jobs:
  tests-on-phpunit-9:
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      matrix:
        os:
          - "ubuntu-latest"
          - "windows-latest"
        php:
          - "8.0"
          - "8.1"
          - "8.2"
        phpunit:
          - "9.x"
        dependencies:
          - "highest"
          - "lowest"
        experimental:
          - false

    name: PHP${{ matrix.php }} with PHPUnit${{ matrix.phpunit }} on ${{ matrix.os }} (${{ matrix.dependencies }})

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, mysql, mysqli, pdo_mysql, bcmath, intl, fileinfo
          coverage: none

      - name: Install PHPUnit ${{ matrix.phpunit }}
        run: |
          composer require "phpunit/phpunit:${{ matrix.phpunit }}" --no-interaction --no-update

      - name: Install dependencies
        uses: "ramsey/composer-install@v2"
        with:
          dependency-versions: "${{ matrix.dependencies }}"
          composer-options: "--prefer-dist --no-cache"

      - name: Installed dependencies
        run: |
          composer show -D

      - name: Execute tests (${{ matrix.os}})
        run: vendor/bin/phpunit
        if: matrix.dependencies == 'highest'

      - name: Execute tests (${{ matrix.os}})
        run: vendor/bin/phpunit --exclude-group=deprecations
        if: matrix.dependencies != 'highest'

  # tests-on-phpunit-10:
  #   runs-on: ${{ matrix.os }}
  #   continue-on-error: ${{ matrix.experimental }}
  #   strategy:
  #     matrix:
  #       os:
  #         - "ubuntu-latest"
  #       php:
  #         - "8.1"
  #       phpunit:
  #         - "^10.0"
  #       dependencies:
  #         - "highest"
  #         - "lowest"
  #       experimental:
  #         - true

  #   name: PHP${{ matrix.php }} with PHPUnit${{ matrix.phpunit }} on ${{ matrix.os }} (${{ matrix.dependencies }})

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v1

  #     - name: Setup PHP
  #       uses: shivammathur/setup-php@v2
  #       with:
  #         php-version: ${{ matrix.php }}
  #         extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, mysql, mysqli, pdo_mysql, bcmath, intl, fileinfo
  #         coverage: none

  #     - name: Install PHPUnit ${{ matrix.phpunit }}
  #       run: |
  #         composer require "phpunit/phpunit:${{ matrix.phpunit }}" --no-interaction --no-update

  #     - name: Install dependencies
  #       uses: "ramsey/composer-install@v1"
  #       with:
  #         dependency-versions: "${{ matrix.dependencies }}"
  #         composer-options: "--prefer-dist --no-cache"

  #     - name: Execute tests
  #       run: vendor/bin/phpunit
