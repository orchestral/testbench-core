name: collision-tests

on:
  push:
  pull_request:
  schedule:
    - cron: '0 0 1 * *'

jobs:
  tests:
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      matrix:
        os:
          - "ubuntu-latest"
        php:
          - 8.1
          - 8.2
        phpunit:
          - "10.1.x"
        collision:
          - "^7.0"
        dependencies:
          - "highest"
          - "lowest"
        experimental:
          - false

    name: PHP${{ matrix.php }} with PHPUnit${{ matrix.phpunit }} on ${{ matrix.os }} (${{ matrix.dependencies }})

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, mysql, mysqli, pdo_mysql, bcmath, intl, fileinfo
          coverage: none

      - name: Install PHPUnit ${{ matrix.phpunit }}
        run: |
          composer require "phpunit/phpunit:${{ matrix.phpunit }}" --no-interaction --no-update
          composer require "nunomaduro/collision:${{ matrix.collision }}" --dev --no-interaction --no-update

      - name: Install dependencies
        uses: "ramsey/composer-install@v2"
        with:
          dependency-versions: "${{ matrix.dependencies }}"
          composer-options: "--prefer-dist --prefer-stable --no-cache"

      - name: Installed dependencies
        run: |
          composer show -D

      - name: Execute tests (with deprecations on PHPUnit 10)
        run: ./testbench package:test --exclude-group commander
        env:
          RAY_ENABLED: false
        if: matrix.dependencies == 'highest'

      - name: Execute tests (without deprecations on PHPUnit 10)
        run: ./testbench package:test --exclude-group commander,deprecations
        env:
          RAY_ENABLED: false
          TESTBENCH_CONVERT_DEPRECATIONS_TO_EXCEPTIONS: false
        if: matrix.dependencies != 'highest'

  tests-with-coverage:
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      matrix:
        os:
          - "ubuntu-latest"
        php:
          - 8.1
          - 8.2
        phpunit:
          - "10.1.x"
        collision:
          - "^7.0"
        dependencies:
          - "highest"
        experimental:
          - false

    name: PHP${{ matrix.php }} with PHPUnit${{ matrix.phpunit }} on ${{ matrix.os }} (${{ matrix.dependencies }}) with Coverage

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, mysql, mysqli, pdo_mysql, bcmath, intl, fileinfo
          coverage: xdebug

      - name: Install PHPUnit ${{ matrix.phpunit }}
        run: |
          composer require "phpunit/phpunit:${{ matrix.phpunit }}" --no-interaction --no-update
          composer require "nunomaduro/collision:${{ matrix.collision }}" --dev --no-interaction --no-update

      - name: Install dependencies
        uses: "ramsey/composer-install@v2"
        with:
          dependency-versions: "${{ matrix.dependencies }}"
          composer-options: "--prefer-dist --prefer-stable --no-cache"

      - name: Installed dependencies
        run: |
          composer show -D

      - name: Execute tests
        run: ./testbench package:test --coverage --exclude-group commander,deprecations
        env:
          RAY_ENABLED: false
          TESTBENCH_CONVERT_DEPRECATIONS_TO_EXCEPTIONS: false
